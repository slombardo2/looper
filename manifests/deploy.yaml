#       Copyright 2017-2019 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Deploy the pod
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: looper
  labels:
    app: stock-trader
  annotations:
    prism.subkind: Liberty
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: looper
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
    spec:
      containers:
      - name: looper
#       image: looper:latest
        image: slombardo2/looper:latest
        env:
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt 
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
          - name: PORTFOLIO_URL
            valueFrom:
              configMapKeyRef:
                name: urls
                key: portfolio
                optional: true
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
        #DEM configuration settings
          - name: IBM_APM_RUM_ENABLED
            value: "true"
          - name: JAEGER_SAMPLER_TYPE
            value: "probabilistic"
          - name: JAEGER_SAMPLER_PARAM
            value: "1.00"
        ports:
          - containerPort: 9080
          - containerPort: 9443
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 5 # Allow a little time to exec into the pod to grab FFDCs before it's killed
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 500Mi
---
#Deploy the autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: looper-hpa
  labels:
    app: stock-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: looper
  maxReplicas: 10
  minReplicas: 2
  targetCPUUtilizationPercentage: 60
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: looper-service
  labels:
    app: looper
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9080
      targetPort: 9080
    - name: https
      protocol: TCP
      port: 9443
      targetPort: 9443
  selector:
    app: looper
---
#Configure the ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
# annotations:
#   ingress.kubernetes.io/rewrite-target: /looper
  name: looper-ingress
spec:
  rules:
  - http:
      paths:
      - path: /looper
        backend:
          serviceName: looper-service
          servicePort: 9080
